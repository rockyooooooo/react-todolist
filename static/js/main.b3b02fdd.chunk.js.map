{"version":3,"sources":["constants/colors.js","components/Button.js","components/contentEditable/contentEditable.js","components/TodoItem.js","components/TodosFilter.js","components/NewTodoForm.js","components/TodoListWrapper.js","App.js","index.js"],"names":["colors","white","gray01","gray02","gray03","bg01","bg02","Button","styled","button","ContentEditable","onChange","onInput","onBlur","onKeyPress","onKeyDown","props","onChangeRef","React","useRef","onInputRef","onBlurRef","onKeyPressRef","onKeyDownRef","useEffect","current","undefined","TodoItemWrapper","li","$isChecked","TodoCheckBox","input","DeleteTodoButton","TodoItem","todo","handleDeleteTodoButtonClick","handleTodoCheckBoxChange","handleTodoContentUpdate","id","content","isChecked","contentEditableClassName","type","checked","tagName","className","html","e","target","value","onClick","TodosFilterItem","div","FilterButton","TodosFilter","setFilter","handleTodosFilterToggle","filter","NewTodoFormItem","form","NewTodoInput","NewTodoForm","todos","setTodos","newTodoContent","setNewTodoContent","onSubmit","preventDefault","placeholder","TodoListWrapperItem","TodoList","ul","RemoveAllTodosButton","TodoListWrapper","map","editedTodoContent","Container","TodosContainer","App","useState","todosData","JSON","parse","localStorage","getItem","length","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3b02fdd.chunk.js","sourcesContent":["const colors = {\r\n  white: '#fff',\r\n  gray01: '#eee',\r\n  gray02: '#777',\r\n  gray03: '#333',\r\n  bg01: '#211f23',\r\n  bg02: '#27252b'\r\n}\r\n\r\nexport default colors\r\n","import styled from 'styled-components'\r\nimport colors from '../constants/colors'\r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  font-size: 1rem;\r\n  color: ${colors.gray02};\r\n  padding: 0.5rem;\r\n  border-radius: 0.5rem;\r\n  border: none;\r\n  transition: color 300ms ease;\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    color: ${colors.white};\r\n  }\r\n`\r\n\r\nexport default Button\r\n","import React from 'react';\r\nimport ReactContentEditable from 'react-contenteditable';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function ContentEditable({\r\n  onChange,\r\n  onInput,\r\n  onBlur,\r\n  onKeyPress,\r\n  onKeyDown,\r\n  ...props\r\n}) {\r\n  const onChangeRef = React.useRef(onChange);\r\n  const onInputRef = React.useRef(onInput);\r\n  const onBlurRef = React.useRef(onBlur);\r\n  const onKeyPressRef = React.useRef(onKeyPress);\r\n  const onKeyDownRef = React.useRef(onKeyDown);\r\n\r\n  React.useEffect(() => {\r\n    onChangeRef.current = onChange;\r\n  }, [onChange]);\r\n  React.useEffect(() => {\r\n    onInputRef.current = onInput;\r\n  }, [onInput]);\r\n  React.useEffect(() => {\r\n    onBlurRef.current = onBlur;\r\n  }, [onBlur]);\r\n  React.useEffect(() => {\r\n    onKeyPressRef.current = onKeyPress;\r\n  }, [onKeyPress]);\r\n  React.useEffect(() => {\r\n    onKeyDownRef.current = onKeyDown;\r\n  }, [onKeyDown]);\r\n\r\n  return (\r\n    <ReactContentEditable\r\n      {...props}\r\n      onChange={\r\n        onChange\r\n          ? (...args) => {\r\n              if (onChangeRef.current) {\r\n                onChangeRef.current(...args);\r\n              }\r\n            }\r\n          : undefined\r\n      }\r\n      onInput={\r\n        onInput\r\n          ? (...args) => {\r\n              if (onInputRef.current) {\r\n                onInputRef.current(...args);\r\n              }\r\n            }\r\n          : undefined\r\n      }\r\n      onBlur={\r\n        onBlur\r\n          ? (...args) => {\r\n              if (onBlurRef.current) {\r\n                onBlurRef.current(...args);\r\n              }\r\n            }\r\n          : undefined\r\n      }\r\n      onKeyPress={\r\n        onKeyPress\r\n          ? (...args) => {\r\n              if (onKeyPressRef.current) {\r\n                onKeyPressRef.current(...args);\r\n              }\r\n            }\r\n          : undefined\r\n      }\r\n      onKeyDown={\r\n        onKeyDown\r\n          ? (...args) => {\r\n              if (onKeyDownRef.current) {\r\n                onKeyDownRef.current(...args);\r\n              }\r\n            }\r\n          : undefined\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nContentEditable.propTypes = {\r\n  onChange: PropTypes.func,\r\n  onInput: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n  onKeyDown: PropTypes.func\r\n}\r\n","import styled from 'styled-components'\r\nimport Button from './Button'\r\nimport colors from '../constants/colors'\r\nimport ContentEditable from './contentEditable/contentEditable'\r\nimport './contentEditable/contentEditable.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TodoItemWrapper = styled.li`\r\n  position: relative;\r\n  max-width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.5rem;\r\n  border-radius: 0.5rem;\r\n  transition: background 300ms ease;\r\n\r\n  &:hover button {\r\n    opacity: 1;\r\n  }\r\n\r\n  ${(props) => !props.$isChecked && `&:hover {background: ${colors.bg02};}`}\r\n`\r\n\r\nconst TodoCheckBox = styled.input`\r\n  width: 1.5rem;\r\n  height: 1.5rem;\r\n  cursor: pointer;\r\n`\r\n\r\nconst DeleteTodoButton = styled(Button)`\r\n  opacity: 0;\r\n  flex-shrink: 0;\r\n  transition: color 300ms ease, opacity 300ms ease;\r\n`\r\n\r\nexport default function TodoItem({ todo, handleDeleteTodoButtonClick, handleTodoCheckBoxChange, handleTodoContentUpdate }) {\r\n  const { id, content, isChecked } = todo\r\n  const contentEditableClassName = `editableContent ${isChecked ? 'isDone' : ''}`\r\n  return (\r\n    <TodoItemWrapper $isChecked={isChecked}>\r\n      <TodoCheckBox\r\n        type=\"checkbox\"\r\n        checked={isChecked}\r\n        onChange={() => handleTodoCheckBoxChange(id)}\r\n      />\r\n      <ContentEditable\r\n        tagName=\"pre\"\r\n        className={contentEditableClassName}\r\n        html={content}\r\n        onChange={(e) => handleTodoContentUpdate(id, e.target.value)}\r\n      />\r\n      <DeleteTodoButton onClick={() => handleDeleteTodoButtonClick(id)}>刪除</DeleteTodoButton>\r\n    </TodoItemWrapper>\r\n  )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    content: PropTypes.string.isRequired,\r\n    isChecked: PropTypes.bool.isRequired\r\n  }).isRequired,\r\n  handleDeleteTodoButtonClick: PropTypes.func.isRequired,\r\n  handleTodoCheckBoxChange: PropTypes.func.isRequired,\r\n  handleTodoContentUpdate: PropTypes.func.isRequired\r\n}\r\n","import styled from 'styled-components'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TodosFilterItem = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\n`\r\nconst FilterButton = styled(Button)`\r\nflex: 1;\r\n`\r\n\r\nexport default function TodosFilter({ setFilter }) {\r\n  const handleTodosFilterToggle = (filter) => {\r\n    return () => setFilter(filter)\r\n  }\r\n\r\n  return (\r\n    <TodosFilterItem>\r\n      <FilterButton onClick={handleTodosFilterToggle(null)}>全部</FilterButton>\r\n      <FilterButton onClick={handleTodosFilterToggle(true)}>未完成</FilterButton>\r\n      <FilterButton onClick={handleTodosFilterToggle(false)}>已完成</FilterButton>\r\n    </TodosFilterItem>\r\n  )\r\n}\r\n\r\nTodosFilter.propTypes = {\r\n  filter: PropTypes.oneOf([null, true, false]),\r\n  setFilter: PropTypes.func.isRequired\r\n}\r\n","import styled from 'styled-components'\r\nimport colors from '../constants/colors'\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst NewTodoFormItem = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n`\r\n\r\nconst NewTodoInput = styled.input`\r\n  flex: 1;\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  color: ${colors.gray02};\r\n  padding: 0.25rem 0.5rem;\r\n  background: transparent;\r\n  border: 1px solid transparent;\r\n  border-radius: 0px;\r\n  transition: border 300ms ease;\r\n\r\n  &::placeholder {\r\n    transition: color 300ms ease;\r\n    user-select: none;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 1px solid ${colors.gray01};\r\n    color: ${colors.white};\r\n\r\n    &::placeholder {\r\n      color: transparent;\r\n    }\r\n  }\r\n`\r\n\r\nexport default function NewTodoForm({ id, todos, setTodos, newTodoContent, setNewTodoContent }) {\r\n  const handleNewTodoInputChange = (e) => {\r\n    setNewTodoContent(e.target.value)\r\n  }\r\n  const handleNewTodoFormSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!newTodoContent) return\r\n    setTodos([{\r\n      id: id.current,\r\n      content: newTodoContent,\r\n      isChecked: false\r\n    }, ...todos])\r\n    setNewTodoContent('')\r\n    id.current++\r\n  }\r\n\r\n  return (\r\n    <NewTodoFormItem onSubmit={handleNewTodoFormSubmit}>\r\n      <NewTodoInput\r\n        type=\"text\"\r\n        value={newTodoContent}\r\n        onChange={handleNewTodoInputChange}\r\n        placeholder=\"new todo\"\r\n      />\r\n    </NewTodoFormItem>\r\n  )\r\n}\r\n\r\nNewTodoForm.propTypes = {\r\n  id: PropTypes.shape({\r\n    current: PropTypes.number\r\n  }).isRequired,\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      isChecked: PropTypes.bool.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  setTodos: PropTypes.func.isRequired,\r\n  newTodoContent: PropTypes.string.isRequired,\r\n  setNewTodoContent: PropTypes.func.isRequired\r\n}\r\n","import styled from 'styled-components'\r\nimport { TodoItem, Button, TodosFilter } from './'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TodoListWrapperItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`\r\n\r\nconst TodoList = styled.ul`\r\n  width: 100%;\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`\r\n\r\nconst RemoveAllTodosButton = styled(Button)`\r\n  margin: 0 auto;\r\n`\r\n\r\nexport default function TodoListWrapper({ todos, setTodos, filter, setFilter }) {\r\n  const handleDeleteTodoButtonClick = (id) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id))\r\n  }\r\n\r\n  const handleTodoCheckBoxChange = (id) => {\r\n    setTodos(todos.map((todo) => {\r\n      if (todo.id !== id) return todo\r\n      return {\r\n        ...todo,\r\n        isChecked: !todo.isChecked\r\n      }\r\n    }))\r\n  }\r\n\r\n  const handleTodoContentUpdate = (id, editedTodoContent) => {\r\n    setTodos(todos.map((todo) => {\r\n      if (todo.id !== id) return todo\r\n      return {\r\n        ...todo,\r\n        content: editedTodoContent\r\n      }\r\n    }))\r\n  }\r\n\r\n  const handleRemoveAllTodosButtonClick = () => setTodos([])\r\n  return (\r\n    <TodoListWrapperItem>\r\n      <TodosFilter setFilter={setFilter} />\r\n      <TodoList>\r\n        {todos\r\n          .filter((todo) => todo.isChecked !== filter)\r\n          .map((todo) => {\r\n            return (\r\n              <TodoItem\r\n                key={todo.id}\r\n                todo={todo}\r\n                handleDeleteTodoButtonClick={handleDeleteTodoButtonClick}\r\n                handleTodoCheckBoxChange={handleTodoCheckBoxChange}\r\n                handleTodoContentUpdate={handleTodoContentUpdate}\r\n              />\r\n            )\r\n          }\r\n        )}\r\n      </TodoList>\r\n      <RemoveAllTodosButton onClick={handleRemoveAllTodosButtonClick}>刪除全部</RemoveAllTodosButton>\r\n    </TodoListWrapperItem>\r\n  )\r\n}\r\n\r\nTodoListWrapper.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      isChecked: PropTypes.bool.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  setTodos: PropTypes.func.isRequired,\r\n  filter: PropTypes.oneOf([null, true, false]),\r\n  setFilter: PropTypes.func.isRequired\r\n}\r\n","import { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { NewTodoForm, TodoListWrapper } from './components'\r\nimport colors from './constants/colors'\r\n\r\nconst Container = styled.div`\r\n  background: ${colors.bg01};\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 5rem;\r\n`\r\n\r\nconst TodosContainer = styled.div`\r\n  width: 50vw;\r\n  max-width: 25rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`\r\n\r\nfunction App() {\r\n  const id = useRef(1)\r\n  const [todos, setTodos] = useState(() => {\r\n    const todosData = JSON.parse(localStorage.getItem('todos')) || []\r\n    id.current = todosData.length ? todosData[0].id + 1 : 1\r\n    return todosData\r\n  })\r\n  const [newTodoContent, setNewTodoContent] = useState('')\r\n  const [filter, setFilter] = useState(null)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  return (\r\n    <Container>\r\n      <TodosContainer>\r\n        <NewTodoForm\r\n          id={id}\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n          newTodoContent={newTodoContent}\r\n          setNewTodoContent={setNewTodoContent}\r\n        />\r\n        {!!todos.length && (\r\n          <TodoListWrapper\r\n            todos={todos}\r\n            setTodos={setTodos}\r\n            filter={filter}\r\n            setFilter={setFilter}\r\n          />\r\n        )}\r\n      </TodosContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}