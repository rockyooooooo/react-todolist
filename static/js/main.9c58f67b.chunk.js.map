{"version":3,"sources":["components/Button.js","components/contentEditable/contentEditable.js","redux/actionTypes.js","redux/actions.js","components/TodoItem.js","components/TodosFilter.js","components/NewTodoForm.js","redux/selectors.js","components/TodoListWrapper.js","App.js","redux/reducers/todos.js","redux/reducers/filter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Button","styled","button","ContentEditable","onChange","onInput","onBlur","onKeyPress","onKeyDown","props","onChangeRef","React","useRef","onInputRef","onBlurRef","onKeyPressRef","onKeyDownRef","useEffect","current","undefined","ADD_TODO","DELETE_TODO","TOGGLE_TODO","EDIT_TODO","DELETE_ALL_TODOS","TOGGLE_FILTER","toggleFilter","filter","type","payload","TodoItemWrapper","li","$isChecked","TodoCheckBox","input","DeleteTodoButton","TodoItem","todo","dispatch","useDispatch","id","content","isChecked","contentEditableClassName","checked","toggleTodo","tagName","className","html","e","editTodo","target","value","onClick","deleteTodo","TodosFilterItem","div","FilterButton","TodosFilter","NewTodoFormItem","form","NewTodoInput","NewTodoForm","useState","newTodoContent","setNewTodoContent","onSubmit","preventDefault","placeholder","selectTodos","store","todoState","todos","selectFilter","filterState","TodoListWrapperItem","TodoList","ul","RemoveAllTodosButton","TodoListWrapper","useSelector","map","Container","TodosContainer","App","localStorage","setItem","JSON","stringify","length","initialState","todosData","parse","getItem","initializeTodos","todosReducer","state","action","filterReducer","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"2OAkBeA,EAhBAC,IAAOC,OAAV,yT,uCCEG,SAASC,EAAT,GAOX,IANFC,EAMC,EANDA,SACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,OACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,UACGC,EACF,wEACKC,EAAcC,IAAMC,OAAOR,GAC3BS,EAAaF,IAAMC,OAAOP,GAC1BS,EAAYH,IAAMC,OAAON,GACzBS,EAAgBJ,IAAMC,OAAOL,GAC7BS,EAAeL,IAAMC,OAAOJ,GAkBlC,OAhBAG,IAAMM,WAAU,WACdP,EAAYQ,QAAUd,IACrB,CAACA,IACJO,IAAMM,WAAU,WACdJ,EAAWK,QAAUb,IACpB,CAACA,IACJM,IAAMM,WAAU,WACdH,EAAUI,QAAUZ,IACnB,CAACA,IACJK,IAAMM,WAAU,WACdF,EAAcG,QAAUX,IACvB,CAACA,IACJI,IAAMM,WAAU,WACdD,EAAaE,QAAUV,IACtB,CAACA,IAGF,cAAC,IAAD,2BACMC,GADN,IAEEL,SACEA,EACI,WACMM,EAAYQ,SACdR,EAAYQ,QAAZ,MAAAR,EAAW,iBAGfS,EAENd,QACEA,EACI,WACMQ,EAAWK,SACbL,EAAWK,QAAX,MAAAL,EAAU,iBAGdM,EAENb,OACEA,EACI,WACMQ,EAAUI,SACZJ,EAAUI,QAAV,MAAAJ,EAAS,iBAGbK,EAENZ,WACEA,EACI,WACMQ,EAAcG,SAChBH,EAAcG,QAAd,MAAAH,EAAa,iBAGjBI,EAENX,UACEA,EACI,WACMQ,EAAaE,SACfF,EAAaE,QAAb,MAAAF,EAAY,iBAGhBG,K,oBChFCC,EAAW,WACXC,EAAc,cACdC,EAAc,cACdC,EAAY,YACZC,EAAmB,mBAEnBC,EAAgB,gBC8ChBC,EAAe,SAACC,GAC3B,MAAO,CACLC,KAAMH,EACNI,QAAS,CACPF,YChDAG,EAAkB7B,IAAO8B,GAAV,kUAejB,SAACtB,GAAD,OACCA,EAAMuB,YAAP,oEAQEC,EAAehC,IAAOiC,MAAV,qFAMZC,EAAmBlC,YAAOD,EAAPC,CAAH,kKAOP,SAASmC,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAC3BC,EAAWC,cACTC,EAA2BH,EAA3BG,GAAIC,EAAuBJ,EAAvBI,QAASC,EAAcL,EAAdK,UACfC,EAAwB,0BAC5BD,EAAY,SAAW,IAGzB,OACE,eAACZ,EAAD,CAAiBE,WAAYU,EAA7B,UACE,cAACT,EAAD,CACEL,KAAK,WACLgB,QAASF,EACTtC,SAAU,kBAAMkC,ED9BE,SAACE,GACzB,MAAO,CACLZ,KAAMN,EACNO,QAAS,CACPW,OC0B2BK,CAAWL,OAEtC,cAACrC,EAAD,CACE2C,QAAQ,MACRC,UAAWJ,EACXK,KAAMP,EACNrC,SAAU,SAAC6C,GAAD,OAAOX,ED3BD,SAACE,EAAIC,GAC3B,MAAO,CACLb,KAAML,EACNM,QAAS,CACPW,KACAC,YCsB4BS,CAASV,EAAIS,EAAEE,OAAOC,WAElD,cAACjB,EAAD,CAAkBkB,QAAS,kBAAMf,ED/Cb,SAACE,GACzB,MAAO,CACLZ,KAAMP,EACNQ,QAAS,CACPW,OC2C0Cc,CAAWd,KAArD,6BC5DN,IAAMe,EAAkBtD,IAAOuD,IAAV,iFAIfC,EAAexD,YAAOD,EAAPC,CAAH,wCAIH,SAASyD,IACtB,IAAMpB,EAAWC,cAEjB,OACE,eAACgB,EAAD,WACE,cAACE,EAAD,CAAcJ,QAAS,kBAAMf,EAASZ,EAAa,QAAnD,0BAGA,cAAC+B,EAAD,CAAcJ,QAAS,kBAAMf,EAASZ,GAAa,KAAnD,gCAGA,cAAC+B,EAAD,CAAcJ,QAAS,kBAAMf,EAASZ,GAAa,KAAnD,mC,gBCnBAiC,EAAkB1D,IAAO2D,KAAV,8DAKfC,EAAe5D,IAAOiC,MAAV,ojBA2BH,SAAS4B,IAAe,IAAD,EACQC,mBAAS,IADjB,mBAC7BC,EAD6B,KACbC,EADa,KAE9B3B,EAAWC,cASjB,OACE,cAACoB,EAAD,CAAiBO,SARa,SAACjB,IAC/BA,EAAEkB,iBACGH,KACL1B,EHlCK,CACLV,KAAMR,EACNS,QAAS,CACPY,QG+BeuB,KACjBC,EAAkB,MAIlB,SACE,cAACJ,EAAD,CACEjC,KAAK,OACLwB,MAAOY,EACP5D,SAAU,SAAC6C,GAAD,OAAOgB,EAAkBhB,EAAEE,OAAOC,QAC5CgB,YAAY,eCtDb,I,UAAMC,EAAc,SAACC,GAAD,OAAWA,EAAMC,UAAUC,OACzCC,EAAe,SAACH,GAAD,OAAWA,EAAMI,YAAY/C,QCKnDgD,EAAsB1E,IAAOuD,IAAV,yFAMnBoB,EAAW3E,IAAO4E,GAAV,8HAQRC,EAAuB7E,YAAOD,EAAPC,CAAH,+CAIX,SAAS8E,IACtB,IAAMP,EAAQQ,YAAYX,GACpB1C,EAASqD,YAAYP,GACrBnC,EAAWC,cAEjB,OACE,eAACoC,EAAD,WACE,cAACjB,EAAD,IACA,cAACkB,EAAD,UACGJ,EACE7C,QAAO,SAACU,GAAD,OAAUA,EAAKK,YAAcf,KACpCsD,KAAI,SAAC5C,GAAD,OACH,cAACD,EAAD,CAAwBC,KAAMA,GAAfA,EAAKG,SAG1B,cAACsC,EAAD,CAAsBzB,QAAS,kBAAMf,ELQlC,CACLV,KAAMJ,KKTJ,yCCjCN,IAAM0D,GAAYjF,IAAOuD,IAAV,yKAST2B,GAAiBlF,IAAOuD,IAAV,8HAyBL4B,OAjBf,WACE,IAAMZ,EAAQQ,YAAYX,GAM1B,OAJApD,qBAAU,WACRoE,aAAaC,QAAQ,QAASC,KAAKC,UAAUhB,MAC5C,CAACA,IAGF,cAACU,GAAD,UACE,eAACC,GAAD,WACE,cAACrB,EAAD,MACGU,EAAMiB,QAAU,cAACV,EAAD,U,kBC1BvBvC,GAAK,EAQHkD,GAAe,CACnBlB,MAPsB,WACtB,IAAMmB,EAAYJ,KAAKK,MAAMP,aAAaQ,QAAQ,WAAa,GAE/D,OADArD,GAAKmD,EAAUF,OAASE,EAAU,GAAGnD,GAAK,EAAI,EACvCmD,EAIAG,IA2DMC,GAxDM,WAAmC,IAAlCC,EAAiC,uDAAzBN,GAAcO,EAAW,uCACrD,OAAQA,EAAOrE,MACb,KAAKR,EACH,OAAO,2BACF4E,GADL,IAEExB,MAAM,CACJ,CACEhC,GAAIA,KACJC,QAASwD,EAAOpE,QAAQY,QACxBC,WAAW,IAJV,oBAMAsD,EAAMxB,UAIf,KAAKnD,EACH,OAAO,2BACF2E,GADL,IAEExB,MAAOwB,EAAMxB,MAAM7C,QAAO,SAACU,GAAD,OAAUA,EAAKG,KAAOyD,EAAOpE,QAAQW,QAGnE,KAAKlB,EACH,OAAO,2BACF0E,GADL,IAEExB,MAAOwB,EAAMxB,MAAMS,KAAI,SAAC5C,GACtB,OAAIA,EAAKG,KAAOyD,EAAOpE,QAAQW,GAAWH,EACnC,2BACFA,GADL,IAEEK,WAAYL,EAAKK,iBAKzB,KAAKnB,EACH,OAAO,2BACFyE,GADL,IAEExB,MAAOwB,EAAMxB,MAAMS,KAAI,SAAC5C,GACtB,OAAIA,EAAKG,KAAOyD,EAAOpE,QAAQW,GAAWH,EACnC,2BACFA,GADL,IAEEI,QAASwD,EAAOpE,QAAQY,eAKhC,KAAKjB,EACH,OAAO,2BACFwE,GADL,IAEExB,MAAO,KAGX,QACE,OAAOwB,ICtEPN,GAAe,CACnB/D,OAAQ,MAgBKuE,GAbO,WAAmC,IAAlCF,EAAiC,uDAAzBN,GAAcO,EAAW,uCACtD,OAAQA,EAAOrE,MACb,KAAKH,EACH,OAAO,2BACFuE,GADL,IAEErE,OAAQsE,EAAOpE,QAAQF,SAG3B,QACE,OAAOqE,ICXEG,gBAAgB,CAC7B5B,UAAWwB,GACXrB,YAAawB,KCHAE,gBACbC,GACAC,OAAOC,8BAAgCD,OAAOC,gCCEhDC,IAASC,OACP,cAAC,IAAD,CAAUnC,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFoC,SAASC,eAAe,W","file":"static/js/main.9c58f67b.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  font-size: 1rem;\r\n  color: var(--gray-dark);\r\n  padding: 0.5rem;\r\n  border-radius: 0.5rem;\r\n  border: none;\r\n  transition: color var(--transition-duration) ease;\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    color: var(--gray-main);\r\n  }\r\n`\r\n\r\nexport default Button\r\n","import React from 'react';\r\nimport ReactContentEditable from 'react-contenteditable';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function ContentEditable({\r\n  onChange,\r\n  onInput,\r\n  onBlur,\r\n  onKeyPress,\r\n  onKeyDown,\r\n  ...props\r\n}) {\r\n  const onChangeRef = React.useRef(onChange);\r\n  const onInputRef = React.useRef(onInput);\r\n  const onBlurRef = React.useRef(onBlur);\r\n  const onKeyPressRef = React.useRef(onKeyPress);\r\n  const onKeyDownRef = React.useRef(onKeyDown);\r\n\r\n  React.useEffect(() => {\r\n    onChangeRef.current = onChange;\r\n  }, [onChange]);\r\n  React.useEffect(() => {\r\n    onInputRef.current = onInput;\r\n  }, [onInput]);\r\n  React.useEffect(() => {\r\n    onBlurRef.current = onBlur;\r\n  }, [onBlur]);\r\n  React.useEffect(() => {\r\n    onKeyPressRef.current = onKeyPress;\r\n  }, [onKeyPress]);\r\n  React.useEffect(() => {\r\n    onKeyDownRef.current = onKeyDown;\r\n  }, [onKeyDown]);\r\n\r\n  return (\r\n    <ReactContentEditable\r\n      {...props}\r\n      onChange={\r\n        onChange\r\n          ? (...args) => {\r\n              if (onChangeRef.current) {\r\n                onChangeRef.current(...args);\r\n              }\r\n            }\r\n          : undefined\r\n      }\r\n      onInput={\r\n        onInput\r\n          ? (...args) => {\r\n              if (onInputRef.current) {\r\n                onInputRef.current(...args);\r\n              }\r\n            }\r\n          : undefined\r\n      }\r\n      onBlur={\r\n        onBlur\r\n          ? (...args) => {\r\n              if (onBlurRef.current) {\r\n                onBlurRef.current(...args);\r\n              }\r\n            }\r\n          : undefined\r\n      }\r\n      onKeyPress={\r\n        onKeyPress\r\n          ? (...args) => {\r\n              if (onKeyPressRef.current) {\r\n                onKeyPressRef.current(...args);\r\n              }\r\n            }\r\n          : undefined\r\n      }\r\n      onKeyDown={\r\n        onKeyDown\r\n          ? (...args) => {\r\n              if (onKeyDownRef.current) {\r\n                onKeyDownRef.current(...args);\r\n              }\r\n            }\r\n          : undefined\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nContentEditable.propTypes = {\r\n  onChange: PropTypes.func,\r\n  onInput: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n  onKeyDown: PropTypes.func\r\n}\r\n","export const ADD_TODO = 'add_todo'\r\nexport const DELETE_TODO = 'delete_todo'\r\nexport const TOGGLE_TODO = 'toggle_todo'\r\nexport const EDIT_TODO = 'edit_todo'\r\nexport const DELETE_ALL_TODOS = 'delete_all_todos'\r\n\r\nexport const TOGGLE_FILTER = 'toggle_filter'\r\n","import {\r\n  ADD_TODO,\r\n  DELETE_ALL_TODOS,\r\n  DELETE_TODO,\r\n  EDIT_TODO,\r\n  TOGGLE_FILTER,\r\n  TOGGLE_TODO\r\n} from './actionTypes'\r\n\r\nexport const addTodo = (content) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: {\r\n      content\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteTodo = (id) => {\r\n  return {\r\n    type: DELETE_TODO,\r\n    payload: {\r\n      id\r\n    }\r\n  }\r\n}\r\n\r\nexport const toggleTodo = (id) => {\r\n  return {\r\n    type: TOGGLE_TODO,\r\n    payload: {\r\n      id\r\n    }\r\n  }\r\n}\r\n\r\nexport const editTodo = (id, content) => {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload: {\r\n      id,\r\n      content\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteAllTodos = () => {\r\n  return {\r\n    type: DELETE_ALL_TODOS\r\n  }\r\n}\r\n\r\nexport const toggleFilter = (filter) => {\r\n  return {\r\n    type: TOGGLE_FILTER,\r\n    payload: {\r\n      filter\r\n    }\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from './Button'\r\nimport ContentEditable from './contentEditable/contentEditable'\r\nimport './contentEditable/contentEditable.css'\r\nimport { deleteTodo, editTodo, toggleTodo } from '../redux/actions'\r\n\r\nconst TodoItemWrapper = styled.li`\r\n  position: relative;\r\n  max-width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.5rem;\r\n  border-radius: 0.5rem;\r\n  transition: background var(--transition-duration) ease;\r\n\r\n  &:hover button {\r\n    opacity: 1;\r\n  }\r\n\r\n  ${(props) =>\r\n    !props.$isChecked &&\r\n    `\r\n    &:hover {\r\n      background: var(--bg-hover);\r\n    }\r\n  `}\r\n`\r\n\r\nconst TodoCheckBox = styled.input`\r\n  width: 1.5rem;\r\n  height: 1.5rem;\r\n  cursor: pointer;\r\n`\r\n\r\nconst DeleteTodoButton = styled(Button)`\r\n  opacity: 0;\r\n  flex-shrink: 0;\r\n  transition: color var(--transition-duration) ease,\r\n    opacity var(--transition-duration) ease;\r\n`\r\n\r\nexport default function TodoItem({ todo }) {\r\n  const dispatch = useDispatch()\r\n  const { id, content, isChecked } = todo\r\n  const contentEditableClassName = `editableContent ${\r\n    isChecked ? 'isDone' : ''\r\n  }`\r\n\r\n  return (\r\n    <TodoItemWrapper $isChecked={isChecked}>\r\n      <TodoCheckBox\r\n        type=\"checkbox\"\r\n        checked={isChecked}\r\n        onChange={() => dispatch(toggleTodo(id))}\r\n      />\r\n      <ContentEditable\r\n        tagName=\"pre\"\r\n        className={contentEditableClassName}\r\n        html={content}\r\n        onChange={(e) => dispatch(editTodo(id, e.target.value))}\r\n      />\r\n      <DeleteTodoButton onClick={() => dispatch(deleteTodo(id))}>\r\n        刪除\r\n      </DeleteTodoButton>\r\n    </TodoItemWrapper>\r\n  )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    content: PropTypes.string.isRequired,\r\n    isChecked: PropTypes.bool.isRequired\r\n  }).isRequired\r\n}\r\n","import { useDispatch } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { toggleFilter } from '../redux/actions'\r\nimport Button from './Button'\r\n\r\nconst TodosFilterItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\nconst FilterButton = styled(Button)`\r\n  flex: 1;\r\n`\r\n\r\nexport default function TodosFilter() {\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <TodosFilterItem>\r\n      <FilterButton onClick={() => dispatch(toggleFilter(null))}>\r\n        全部\r\n      </FilterButton>\r\n      <FilterButton onClick={() => dispatch(toggleFilter(true))}>\r\n        未完成\r\n      </FilterButton>\r\n      <FilterButton onClick={() => dispatch(toggleFilter(false))}>\r\n        已完成\r\n      </FilterButton>\r\n    </TodosFilterItem>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addTodo } from '../redux/actions'\r\n\r\nconst NewTodoFormItem = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n`\r\n\r\nconst NewTodoInput = styled.input`\r\n  flex: 1;\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  color: var(--gray-dark);\r\n  padding: 0.25rem 0.5rem;\r\n  background: transparent;\r\n  border: 1px solid transparent;\r\n  border-radius: 0px;\r\n  transition: border var(--transition-duration) ease;\r\n\r\n  &::placeholder {\r\n    transition: color var(--transition-duration) ease;\r\n    user-select: none;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 1px solid var(--gray-main);\r\n    color: var(--gray-main);\r\n\r\n    &::placeholder {\r\n      color: transparent;\r\n    }\r\n  }\r\n`\r\n\r\nexport default function NewTodoForm() {\r\n  const [newTodoContent, setNewTodoContent] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleNewTodoFormSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!newTodoContent) return\r\n    dispatch(addTodo(newTodoContent))\r\n    setNewTodoContent('')\r\n  }\r\n\r\n  return (\r\n    <NewTodoFormItem onSubmit={handleNewTodoFormSubmit}>\r\n      <NewTodoInput\r\n        type=\"text\"\r\n        value={newTodoContent}\r\n        onChange={(e) => setNewTodoContent(e.target.value)}\r\n        placeholder=\"new todo\"\r\n      />\r\n    </NewTodoFormItem>\r\n  )\r\n}\r\n","export const selectTodos = (store) => store.todoState.todos\r\nexport const selectFilter = (store) => store.filterState.filter\r\n","import styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { TodoItem, Button, TodosFilter } from './'\r\nimport { deleteAllTodos } from '../redux/actions'\r\nimport { selectFilter, selectTodos } from '../redux/selectors'\r\n\r\nconst TodoListWrapperItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`\r\n\r\nconst TodoList = styled.ul`\r\n  width: 100%;\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`\r\n\r\nconst RemoveAllTodosButton = styled(Button)`\r\n  margin: 0 auto;\r\n`\r\n\r\nexport default function TodoListWrapper() {\r\n  const todos = useSelector(selectTodos)\r\n  const filter = useSelector(selectFilter)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <TodoListWrapperItem>\r\n      <TodosFilter />\r\n      <TodoList>\r\n        {todos\r\n          .filter((todo) => todo.isChecked !== filter)\r\n          .map((todo) => (\r\n            <TodoItem key={todo.id} todo={todo} />\r\n          ))}\r\n      </TodoList>\r\n      <RemoveAllTodosButton onClick={() => dispatch(deleteAllTodos())}>\r\n        刪除全部\r\n      </RemoveAllTodosButton>\r\n    </TodoListWrapperItem>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport { NewTodoForm, TodoListWrapper } from './components'\r\nimport { selectTodos } from './redux/selectors'\r\n\r\nconst Container = styled.div`\r\n  background: var(--bg-main);\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 5rem;\r\n`\r\n\r\nconst TodosContainer = styled.div`\r\n  width: 50vw;\r\n  max-width: 25rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`\r\n\r\nfunction App() {\r\n  const todos = useSelector(selectTodos)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  return (\r\n    <Container>\r\n      <TodosContainer>\r\n        <NewTodoForm />\r\n        {!!todos.length && <TodoListWrapper />}\r\n      </TodosContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import {\r\n  ADD_TODO,\r\n  DELETE_ALL_TODOS,\r\n  DELETE_TODO,\r\n  EDIT_TODO,\r\n  TOGGLE_TODO\r\n} from '../actionTypes'\r\n\r\nlet id = 0\r\n\r\nconst initializeTodos = () => {\r\n  const todosData = JSON.parse(localStorage.getItem('todos')) || []\r\n  id = todosData.length ? todosData[0].id + 1 : 1\r\n  return todosData\r\n}\r\n\r\nconst initialState = {\r\n  todos: initializeTodos()\r\n}\r\n\r\nconst todosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          {\r\n            id: id++,\r\n            content: action.payload.content,\r\n            isChecked: false\r\n          },\r\n          ...state.todos\r\n        ]\r\n      }\r\n\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id)\r\n      }\r\n\r\n    case TOGGLE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id !== action.payload.id) return todo\r\n          return {\r\n            ...todo,\r\n            isChecked: !todo.isChecked\r\n          }\r\n        })\r\n      }\r\n\r\n    case EDIT_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id !== action.payload.id) return todo\r\n          return {\r\n            ...todo,\r\n            content: action.payload.content\r\n          }\r\n        })\r\n      }\r\n\r\n    case DELETE_ALL_TODOS:\r\n      return {\r\n        ...state,\r\n        todos: []\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todosReducer\r\n","import { TOGGLE_FILTER } from '../actionTypes'\r\n\r\nconst initialState = {\r\n  filter: null\r\n}\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.payload.filter\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default filterReducer\r\n","import { combineReducers } from 'redux'\r\nimport todosReducer from './todos'\r\nimport filterReducer from './filter'\r\n\r\nexport default combineReducers({\r\n  todoState: todosReducer,\r\n  filterState: filterReducer\r\n})\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}